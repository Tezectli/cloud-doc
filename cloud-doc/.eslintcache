[{"D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\hooks\\useIpcRenderer.js":"1","D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\index.js":"2","D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\utils\\fileHelper.js":"3","D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\components\\FileList.js":"4","D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\components\\TabList.js":"5","D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\utils\\defaultFiles.js":"6","D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\components\\BottomBtn.js":"7","D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\utils\\helper.js":"8","D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\components\\FileSearch.js":"9","D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\App.js":"10"},{"size":469,"mtime":1612872390991,"results":"11","hashOfConfig":"12"},{"size":500,"mtime":1612104810165,"results":"13","hashOfConfig":"12"},{"size":1088,"mtime":1612263060183,"results":"14","hashOfConfig":"12"},{"size":6663,"mtime":1612699351249,"results":"15","hashOfConfig":"12"},{"size":1791,"mtime":1611594544294,"results":"16","hashOfConfig":"12"},{"size":415,"mtime":1611835084007,"results":"17","hashOfConfig":"12"},{"size":666,"mtime":1611600269120,"results":"18","hashOfConfig":"12"},{"size":691,"mtime":1613660598470,"results":"19","hashOfConfig":"12"},{"size":2698,"mtime":1611836975639,"results":"20","hashOfConfig":"12"},{"size":11286,"mtime":1613661046404,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"b93w04",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\hooks\\useIpcRenderer.js",[],["48","49"],"D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\index.js",[],"D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\utils\\fileHelper.js",["50"],"const fs = window.require(\"fs\").promises;\r\nconst path = window.require(\"path\");\r\n\r\nconst fileHelper = {\r\n  readFile: (path) => {\r\n    return fs.readFile(path, { encoding: \"utf8\" });\r\n  },\r\n  writeFile: (path, content) => {\r\n    return fs.writeFile(path, content, { encoding: \"utf8\" });\r\n  },\r\n  renameFile: (path, newPath) => {\r\n    return fs.rename(path, newPath);\r\n  },\r\n  deleteFile: (path) => {\r\n    return fs.unlink(path);\r\n  },\r\n};\r\n\r\n//以下为测试使用\r\n// const testPath = path.join(__dirname, \"helper.js\");\r\n// const testWritePath = path.join(__dirname, \"hellow.md\");\r\n// const renamePath = path.join(__dirname, \"rename.md\");\r\n// fileHelper.readFile(testPath).then((data) => {\r\n//   console.log(data);\r\n// });\r\n// fileHelper.writeFile(testWritePath, \"##hellow world\").then(() => {\r\n//   console.log(\"写入成功\");\r\n// });\r\n// fileHelper.renameFile(testWritePath, renamePath).then(() => {\r\n//   console.log(\"重命名成功\");\r\n// });\r\n// fileHelper.deleteFile(renamePath).then(() => {\r\n//   console.log(`${renamePath}删除成功`);\r\n// });\r\n\r\nexport default fileHelper;\r\n","D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\components\\FileList.js",["51","52","53","54","55"],"import React, { Component, useState, useEffect, useReducer } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faTrash, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faMarkdown } from \"@fortawesome/free-brands-svg-icons\";\r\nimport useKeyPress from \"../hooks/useKeyPress\";\r\nimport usecontextMenu from \"../hooks/useContextMenu\";\r\nimport { getParentNode } from \"../utils/helper\";\r\n\r\n//添加node.js插件\r\nconst { remote } = window.require(\"electron\");\r\nconst { Menu, MenuItem } = remote;\r\n\r\nconst FileList = ({ files, onFileClick, onSaveEdit, onFileDelete }) => {\r\n  const [editStatus, setEditStatus] = useState(false);\r\n  const [value, setValue] = useState(\"\");\r\n  const closeSearch = (editItem) => {\r\n    setEditStatus(false);\r\n    setValue(\"\");\r\n    //如果正在修改新建的文件时\r\n    if (editItem.isNew) {\r\n      onFileDelete(editItem.id);\r\n    }\r\n  };\r\n  const clickItem = usecontextMenu(\r\n    [\r\n      {\r\n        label: \"打开\",\r\n        click: () => {\r\n          //取得对应位置的参数\r\n          const parentElement = getParentNode(clickItem.current, \"file-item\");\r\n          if (parentElement) {\r\n            onFileClick(parentElement.dataset.id);\r\n          }\r\n        },\r\n      },\r\n      {\r\n        label: \"重命名\",\r\n        click: () => {\r\n          const parentElement = getParentNode(clickItem.current, \"file-item\");\r\n          setEditStatus(parentElement.dataset.id);\r\n          setValue(parentElement.dataset.title);\r\n        },\r\n      },\r\n      {\r\n        label: \"删除\",\r\n        click: () => {\r\n          const parentElement = getParentNode(clickItem.current, \"file-item\");\r\n          onFileDelete(parentElement.dataset.id);\r\n        },\r\n      },\r\n    ],\r\n    \".file-list\"\r\n  );\r\n  // useEffect(() => {\r\n  //   const menu = new Menu();\r\n  //   menu.append(\r\n  //     new MenuItem({\r\n  //       label: \"打开\",\r\n  //       click: () => {\r\n  //         console.log(\"clikong file\");\r\n  //       },\r\n  //     })\r\n  //   );\r\n  //   menu.append(\r\n  //     new MenuItem({\r\n  //       label: \"重命名\",\r\n  //       click: () => {\r\n  //         console.log(\"renmae file\");\r\n  //       },\r\n  //     })\r\n  //   );\r\n  //   menu.append(\r\n  //     new MenuItem({\r\n  //       label: \"删除\",\r\n  //       click: () => {\r\n  //         console.log(\"delet file\");\r\n  //       },\r\n  //     })\r\n  //   );\r\n  //   const handleContextMenu = (e) => {\r\n  //     menu.popup({ window: remote.getCurrentWindow() });\r\n  //   };\r\n  //   window.addEventListener(\"contextmenu\", handleContextMenu);\r\n  //   return () => {\r\n  //     window.removeEventListener(\"contextmenu\", handleContextMenu);\r\n  //   };\r\n  // });\r\n  const enterPressed = useKeyPress(13); //代表enter键\r\n  const escPressed = useKeyPress(27); //代表esc键\r\n  //键盘响应事件\r\n  useEffect(() => {\r\n    const editItem = files.find((file) => file.id === editStatus);\r\n    //当输入标题为空时不能进行enter操作\r\n    if (enterPressed && editStatus && value.trim() !== \"\") {\r\n      onSaveEdit(editItem.id, value, editItem.isNew);\r\n      setEditStatus(false);\r\n      setValue(\"\");\r\n    }\r\n    if (escPressed && editStatus) {\r\n      closeSearch(editItem);\r\n    }\r\n    // const handleInputEvent = (event) => {\r\n    //   const { keyCode } = event;\r\n    //   if (keyCode === 13 && editStatus) {\r\n    //     const editItem = files.find((file) => file.id === editStatus);\r\n    //     onSaveEdit(editItem.id, value);\r\n    //     setEditStatus(false);\r\n    //     setValue(\"\");\r\n    //   } else if (keyCode === 27 && editStatus) {\r\n    //     closeSearch(event);\r\n    //   }\r\n    // };\r\n    // document.addEventListener(\"keyup\", handleInputEvent);\r\n    // return () => {\r\n    //   document.removeEventListener(\"keyup\", handleInputEvent);\r\n    // };\r\n  });\r\n  //   useEffect(() => {\r\n  //     if (editStatus) {\r\n  //       node.current.focus();\r\n  //     }\r\n  //   }, [editStatus]);\r\n  useEffect(() => {\r\n    const newFile = files.find((file) => file.isNew);\r\n    // console.log(newFile);\r\n    if (newFile) {\r\n      setEditStatus(newFile.id);\r\n      setValue(newFile.title);\r\n    }\r\n  }, [files]);\r\n  return (\r\n    <ul className=\"list-group list-group-flush file-list row\">\r\n      {files.map((file) => (\r\n        <li\r\n          className=\"list-group-item bg-light d-flex align-items-center file-item\"\r\n          key={file.id}\r\n          data-id={file.id}\r\n          data-title={file.title}\r\n        >\r\n          {file.id !== editStatus && !file.isNew && (\r\n            <>\r\n              <span className=\"col-2\">\r\n                <FontAwesomeIcon icon={faMarkdown} title=\"文档\" />\r\n              </span>\r\n              <span\r\n                className=\"col-6 c-link\"\r\n                onClick={() => {\r\n                  onFileClick(file.id);\r\n                }}\r\n              >\r\n                {file.title}\r\n              </span>\r\n              <button\r\n                type=\"button\"\r\n                className=\"icon-button col-1\"\r\n                onClick={() => {\r\n                  setEditStatus(file.id);\r\n                  setValue(file.title);\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faEdit} title=\"编辑\" />\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"icon-button col-1\"\r\n                onClick={() => {\r\n                  onFileDelete(file.id);\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faTrash} title=\"删除\" />\r\n              </button>\r\n            </>\r\n          )}\r\n\r\n          {(file.id === editStatus || file.isNew) && (\r\n            <>\r\n              <div className=\"d-flex justify-content-between align-items-center input-group-sm\">\r\n                <input\r\n                  className=\"form-control col-10\"\r\n                  value={value}\r\n                  placeholder=\"请输入新标题\"\r\n                  onChange={(e) => {\r\n                    setValue(e.target.value);\r\n                  }}\r\n                ></input>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"icon-button col-2\"\r\n                  onClick={() => {\r\n                    closeSearch(file);\r\n                  }}\r\n                >\r\n                  <FontAwesomeIcon icon={faTimes} title=\"关闭\" />\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nFileList.propTypes = {\r\n  fiels: PropTypes.array,\r\n  onFileClick: PropTypes.func,\r\n  onFileDelete: PropTypes.func,\r\n  onSaveEdit: PropTypes.func,\r\n};\r\nexport default FileList;\r\n",["56","57"],"D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\components\\TabList.js",["58","59"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport classNames from \"classnames\";\r\nimport \"./TabList.scss\";\r\n// import { Tab } from \"bootstrap\";\r\n\r\nconst TabList = ({ files, activeId, unsaveIds, onTabClick, onCloseTab }) => {\r\n  return (\r\n    <ul className=\"nav nav-pills tablist-component\">\r\n      {files.map((file) => {\r\n        const withUnsavedMark = unsaveIds.includes(file.id);\r\n        const fClassName = classNames({\r\n          \"nav-link\": true,\r\n          active: file.id === activeId,\r\n          withUnsaved: withUnsavedMark,\r\n        });\r\n        return (\r\n          <li className=\"nav-item\" key={file.id}>\r\n            <a\r\n              href=\"#\"\r\n              className={fClassName}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                onTabClick(file.id);\r\n              }}\r\n            >\r\n              {file.title}\r\n\r\n              <span\r\n                className=\"ml-2 close-icon\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  onCloseTab(file.id);\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </span>\r\n              {withUnsavedMark && (\r\n                <span className=\"rounded-circle unsaved-icon ml-2\"></span>\r\n              )}\r\n            </a>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nTabList.protoTypes = {\r\n  files: PropTypes.array,\r\n  activeId: PropTypes.string,\r\n  unsaveIds: PropTypes.array,\r\n  onTabClick: PropTypes.func,\r\n  onCloseTab: PropTypes.func,\r\n};\r\nTabList.defaultProps = {\r\n  unsaveIds: [],\r\n};\r\n\r\nexport default TabList;\r\n","D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\utils\\defaultFiles.js",[],"D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\components\\BottomBtn.js",["60"],"D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\utils\\helper.js",[],"D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\components\\FileSearch.js",["61"],"import React, { Component, useState, useEffect, useRef } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport useKeyPress from \"../hooks/useKeyPress\";\r\nconst FileSearch = ({ title, onFileSearch }) => {\r\n  const [inputActive, setInputActive] = useState(false);\r\n  const [value, setValue] = useState(\"\");\r\n  const enterPressed = useKeyPress(13);\r\n  const escPressed = useKeyPress(27);\r\n  let node = useRef(null);\r\n\r\n  const closeSearch = () => {\r\n    setInputActive(false);\r\n    setValue(\"\");\r\n    onFileSearch(\"\");\r\n  };\r\n  useEffect(() => {\r\n    if (enterPressed && inputActive) {\r\n      onFileSearch(value);\r\n    }\r\n    if (escPressed && inputActive) {\r\n      closeSearch();\r\n    }\r\n    // const handleInputEvent = (event) => {\r\n    //   const { keyCode } = event;\r\n    //   if (keyCode === 13 && inputActive) {\r\n    //     onFileSearch(value);\r\n    //   } else if (keyCode === 27 && inputActive) {\r\n    //     closeSearch(event);\r\n    //   }\r\n    // };\r\n    // document.addEventListener(\"keyup\", handleInputEvent);\r\n    // return () => {\r\n    //   document.removeEventListener(\"keyup\", handleInputEvent);\r\n    // };\r\n  });\r\n  useEffect(() => {\r\n    if (inputActive) {\r\n      node.current.focus();\r\n    }\r\n  }, [inputActive]);\r\n  return (\r\n    <div className=\"d-flex leftHeight align-items-center\">\r\n      {!inputActive && (\r\n        <div className=\"d-flex justify-content-between align-items-center\">\r\n          <span className=\"\">{title}</span>\r\n          <button\r\n            type=\"button\"\r\n            className=\"icon-button\"\r\n            onClick={() => {\r\n              setInputActive(true);\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faSearch} title=\"搜索\" />\r\n            {/* 搜索 */}\r\n          </button>\r\n        </div>\r\n      )}\r\n      {inputActive && (\r\n        <div className=\"d-flex justify-content-between align-items-center input-group-sm\">\r\n          <input\r\n            className=\"form-control\"\r\n            value={value}\r\n            ref={node}\r\n            onChange={(e) => {\r\n              setValue(e.target.value);\r\n            }}\r\n          ></input>\r\n          <button type=\"button\" className=\"icon-button\" onClick={closeSearch}>\r\n            <FontAwesomeIcon icon={faTimes} title=\"关闭\" />\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n//React类型检查\r\nFileSearch.propTypes = {\r\n  title: PropTypes.string,\r\n  onFileSearch: PropTypes.func.isRequired,\r\n};\r\n//React默认属性\r\nFileSearch.defaultProps = {\r\n  title: \"我的啦啦啦啦啦\",\r\n};\r\nexport default FileSearch;\r\n","D:\\C language\\2019-2\\WAproject\\React-Cloud\\cloud-doc\\cloud-doc\\src\\App.js",["62","63","64","65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":7,"nodeType":"72","messageId":"73","endLine":2,"endColumn":11},{"ruleId":"70","severity":1,"message":"74","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"75","line":1,"column":49,"nodeType":"72","messageId":"73","endLine":1,"endColumn":59},{"ruleId":"70","severity":1,"message":"76","line":12,"column":9,"nodeType":"72","messageId":"73","endLine":12,"endColumn":13},{"ruleId":"70","severity":1,"message":"77","line":12,"column":15,"nodeType":"72","messageId":"73","endLine":12,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":92,"column":3,"nodeType":"72","endLine":92,"endColumn":12,"suggestions":"80"},{"ruleId":"66","replacedBy":"81"},{"ruleId":"68","replacedBy":"82"},{"ruleId":"70","severity":1,"message":"74","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"83","severity":1,"message":"84","line":21,"column":13,"nodeType":"85","endLine":28,"endColumn":14},{"ruleId":"70","severity":1,"message":"74","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"74","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"86","line":6,"column":3,"nodeType":"72","messageId":"73","endLine":6,"endColumn":9},{"ruleId":"70","severity":1,"message":"87","line":13,"column":8,"nodeType":"72","messageId":"73","endLine":13,"endColumn":20},{"ruleId":"70","severity":1,"message":"88","line":18,"column":20,"nodeType":"72","messageId":"73","endLine":18,"endColumn":29},{"ruleId":"70","severity":1,"message":"89","line":20,"column":10,"nodeType":"72","messageId":"73","endLine":20,"endColumn":21},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'path' is assigned a value but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useReducer' is defined but never used.","'Menu' is assigned a value but never used.","'MenuItem' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setEditStatus'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [files, enterPressed, editStatus, value, escPressed, onSaveEdit, closeSearch] as a second argument to the useEffect Hook.",["92"],["90"],["91"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'faSave' is defined but never used.","'defaultFiles' is defined but never used.","'useEffect' is defined but never used.","'opendirSync' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Add dependencies array: [files, enterPressed, editStatus, value, escPressed, onSaveEdit, closeSearch]",{"range":"95","text":"96"},[3706,3706],", [files, enterPressed, editStatus, value, escPressed, onSaveEdit, closeSearch]"]